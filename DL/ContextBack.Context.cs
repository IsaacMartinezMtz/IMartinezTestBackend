//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TestBackendEntities : DbContext
    {
        public TestBackendEntities()
            : base("name=TestBackendEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Categoria> Categorias { get; set; }
        public virtual DbSet<DivSubcategoria> DivSubcategorias { get; set; }
        public virtual DbSet<Producto> Productos { get; set; }
        public virtual DbSet<SubCategoria> SubCategorias { get; set; }
    
        public virtual int AddCategoria(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddCategoria", nombreParameter);
        }
    
        public virtual int AddDivSubcategorias(string nombre, Nullable<int> idSubcategorias)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idSubcategoriasParameter = idSubcategorias.HasValue ?
                new ObjectParameter("IdSubcategorias", idSubcategorias) :
                new ObjectParameter("IdSubcategorias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddDivSubcategorias", nombreParameter, idSubcategoriasParameter);
        }
    
        public virtual int AddProductos(string nombreProductos, string numMaterial, Nullable<int> categoria, Nullable<int> inventario)
        {
            var nombreProductosParameter = nombreProductos != null ?
                new ObjectParameter("NombreProductos", nombreProductos) :
                new ObjectParameter("NombreProductos", typeof(string));
    
            var numMaterialParameter = numMaterial != null ?
                new ObjectParameter("NumMaterial", numMaterial) :
                new ObjectParameter("NumMaterial", typeof(string));
    
            var categoriaParameter = categoria.HasValue ?
                new ObjectParameter("Categoria", categoria) :
                new ObjectParameter("Categoria", typeof(int));
    
            var inventarioParameter = inventario.HasValue ?
                new ObjectParameter("Inventario", inventario) :
                new ObjectParameter("Inventario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddProductos", nombreProductosParameter, numMaterialParameter, categoriaParameter, inventarioParameter);
        }
    
        public virtual int AddSucategoriasCategorias(string nombre, Nullable<int> idCategorias)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idCategoriasParameter = idCategorias.HasValue ?
                new ObjectParameter("IdCategorias", idCategorias) :
                new ObjectParameter("IdCategorias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddSucategoriasCategorias", nombreParameter, idCategoriasParameter);
        }
    
        public virtual int DeleteCategoria(Nullable<int> idCategoria)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCategoria", idCategoriaParameter);
        }
    
        public virtual int DeleteDivSubcategorias(Nullable<int> idDivSubcategorias)
        {
            var idDivSubcategoriasParameter = idDivSubcategorias.HasValue ?
                new ObjectParameter("IdDivSubcategorias", idDivSubcategorias) :
                new ObjectParameter("IdDivSubcategorias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteDivSubcategorias", idDivSubcategoriasParameter);
        }
    
        public virtual int DeleteProductos(Nullable<int> idProductos)
        {
            var idProductosParameter = idProductos.HasValue ?
                new ObjectParameter("IdProductos", idProductos) :
                new ObjectParameter("IdProductos", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteProductos", idProductosParameter);
        }
    
        public virtual int DeleteSubacategorias(Nullable<int> idSubacategorias)
        {
            var idSubacategoriasParameter = idSubacategorias.HasValue ?
                new ObjectParameter("IdSubacategorias", idSubacategorias) :
                new ObjectParameter("IdSubacategorias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSubacategorias", idSubacategoriasParameter);
        }
    
        public virtual ObjectResult<GetAllCategorias_Result> GetAllCategorias()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCategorias_Result>("GetAllCategorias");
        }
    
        public virtual ObjectResult<GetAllProductos_Result> GetAllProductos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllProductos_Result>("GetAllProductos");
        }
    
        public virtual ObjectResult<GetByIdCategoria_Result> GetByIdCategoria(Nullable<int> idCategoria)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetByIdCategoria_Result>("GetByIdCategoria", idCategoriaParameter);
        }
    
        public virtual ObjectResult<GetByIdCategorias_Result> GetByIdCategorias(Nullable<int> idCategoria)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetByIdCategorias_Result>("GetByIdCategorias", idCategoriaParameter);
        }
    
        public virtual int UpdateCategoria(Nullable<int> idCategoria, string nombre)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCategoria", idCategoriaParameter, nombreParameter);
        }
    
        public virtual int UpdateDivSubcategorias(Nullable<int> idDivSubcategorias, string nombre, Nullable<int> idSubcategorias)
        {
            var idDivSubcategoriasParameter = idDivSubcategorias.HasValue ?
                new ObjectParameter("IdDivSubcategorias", idDivSubcategorias) :
                new ObjectParameter("IdDivSubcategorias", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idSubcategoriasParameter = idSubcategorias.HasValue ?
                new ObjectParameter("IdSubcategorias", idSubcategorias) :
                new ObjectParameter("IdSubcategorias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDivSubcategorias", idDivSubcategoriasParameter, nombreParameter, idSubcategoriasParameter);
        }
    
        public virtual int UpdateProductos(Nullable<int> idProductos, string nombreProductos, string numMaterial, Nullable<int> categoria, Nullable<int> inventario)
        {
            var idProductosParameter = idProductos.HasValue ?
                new ObjectParameter("IdProductos", idProductos) :
                new ObjectParameter("IdProductos", typeof(int));
    
            var nombreProductosParameter = nombreProductos != null ?
                new ObjectParameter("NombreProductos", nombreProductos) :
                new ObjectParameter("NombreProductos", typeof(string));
    
            var numMaterialParameter = numMaterial != null ?
                new ObjectParameter("NumMaterial", numMaterial) :
                new ObjectParameter("NumMaterial", typeof(string));
    
            var categoriaParameter = categoria.HasValue ?
                new ObjectParameter("Categoria", categoria) :
                new ObjectParameter("Categoria", typeof(int));
    
            var inventarioParameter = inventario.HasValue ?
                new ObjectParameter("Inventario", inventario) :
                new ObjectParameter("Inventario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProductos", idProductosParameter, nombreProductosParameter, numMaterialParameter, categoriaParameter, inventarioParameter);
        }
    
        public virtual int UpdateSubcatergorias(Nullable<int> idSubcategorias, string nombre, Nullable<int> idCategorias)
        {
            var idSubcategoriasParameter = idSubcategorias.HasValue ?
                new ObjectParameter("IdSubcategorias", idSubcategorias) :
                new ObjectParameter("IdSubcategorias", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idCategoriasParameter = idCategorias.HasValue ?
                new ObjectParameter("IdCategorias", idCategorias) :
                new ObjectParameter("IdCategorias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSubcatergorias", idSubcategoriasParameter, nombreParameter, idCategoriasParameter);
        }
    
        public virtual ObjectResult<GetAllSubCategorias_Result> GetAllSubCategorias()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllSubCategorias_Result>("GetAllSubCategorias");
        }
    
        public virtual ObjectResult<DiVSubCategoriasGetAll_Result> DiVSubCategoriasGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DiVSubCategoriasGetAll_Result>("DiVSubCategoriasGetAll");
        }
    
        public virtual ObjectResult<GetByIdSubCategorias_Result> GetByIdSubCategorias(Nullable<int> idSubCategorias)
        {
            var idSubCategoriasParameter = idSubCategorias.HasValue ?
                new ObjectParameter("IdSubCategorias", idSubCategorias) :
                new ObjectParameter("IdSubCategorias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetByIdSubCategorias_Result>("GetByIdSubCategorias", idSubCategoriasParameter);
        }
    
        public virtual ObjectResult<DivSubcategoriasGetById_Result> DivSubcategoriasGetById(Nullable<int> idDivSubCategorias)
        {
            var idDivSubCategoriasParameter = idDivSubCategorias.HasValue ?
                new ObjectParameter("IdDivSubCategorias", idDivSubCategorias) :
                new ObjectParameter("IdDivSubCategorias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DivSubcategoriasGetById_Result>("DivSubcategoriasGetById", idDivSubCategoriasParameter);
        }
    
        public virtual ObjectResult<GetByIdProductos_Result> GetByIdProductos(Nullable<int> idProductos)
        {
            var idProductosParameter = idProductos.HasValue ?
                new ObjectParameter("IdProductos", idProductos) :
                new ObjectParameter("IdProductos", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetByIdProductos_Result>("GetByIdProductos", idProductosParameter);
        }
    
        public virtual ObjectResult<GetByIdSubCategoriasC_Result> GetByIdSubCategoriasC(Nullable<int> idSubCategorias)
        {
            var idSubCategoriasParameter = idSubCategorias.HasValue ?
                new ObjectParameter("IdSubCategorias", idSubCategorias) :
                new ObjectParameter("IdSubCategorias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetByIdSubCategoriasC_Result>("GetByIdSubCategoriasC", idSubCategoriasParameter);
        }
    }
}
